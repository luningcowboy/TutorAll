# vim: set fenc=utf-8 ft=dosini:

# define a new task named "file-build"
[file-build]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command=gcc "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
command:cpp=g++ "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
command:cs=csc "$(VIM_FILEPATH)"


# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_FILEDIR)

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=1

[file-run]
command=$(VIM_FILEDIR)/$(VIM_FILENOEXT)
command:lua=lua "$(VIM_FILENAME)"
command:python=python "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:cpp="$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
command:cs=mono "$(VIM_FILEDIR)/$(VIM_FILENOEXT)".exe
cwd=$(VIM_FILEDIR)
# 定义输出方式，在终端内运行
output=terminal


[build-and-run]
cwd=$(VIM_FILEDIR)
command:cs= csc "$(VIM_FILEPATH)" && mono "$(VIM_FILEDIR)/$(VIM_FILENOEXT)".exe
output=quickfix

